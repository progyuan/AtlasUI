<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBsAAAEAIAAUDgAAFgAAACgAAAAgAAAANgAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMez
        HwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMWoFAHGqhYNxaoWBQAAAAAAAAAAAAAAAAAAAADGqRYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMiqGAAAAAAAAAAAAMWp
        FRLGqhY7xqoWgcaqFsjGqhb6xqoW/8WpFf/GqRX/xqkV/8WpFd/FqRWdxqkWTcWpFR4AAAAAAAAAAMWp
        FQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGqhYAAAAAAAAA
        AADFqRVzxqoW0caqFvzGqhb/xakV/8WpFf/FqRW7xakVhMWpFWbFqRVgxqoWccaqFpfFqRXOxqkW6sWp
        FafFqRUVAAAAAMaqFgAAAAAA5t+3AAAAAAAAAAAA5t+3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADGqRYUxaoV1capFv/FqRX/xakV/8WpFf/FqhWixqkWCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADEqhYFxqkVbcWpFeXFqRVLAAAAAAAAAAAAAAAA5t+3LObft2wAAAAAAAAAAAAAAAAAAAAAAAAAAMaq
        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
        /7/APz//4AA///AAf//4AP///AH///+P//8=
</value>
  </data>
</root>